/*
 * Copyright (C) 2012 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the * License for the specific language governing permissions and limitations under
 * the License.
 */

dependencies {
  compile project(':rosjava_osgi_master')

  compile project(':interactivespaces-core')
  compile project(':interactivespaces-database')
  compile project(':service:interactivespaces-service-alert')
  compile project(':service:interactivespaces-service-script')
  compile project(':service:interactivespaces-service-scheduler')

  compile 'org.apache.openjpa:openjpa:2.2.0'
  compile 'javax.persistence:com.springsource.javax.persistence:2.0.0'
    
  compile 'org.springframework:spring-tx:3.1.1.RELEASE'
  compile 'org.springframework:spring-orm:3.1.1.RELEASE'

  compile 'org.jdom:com.springsource.org.jdom:1.1.0'
  
  compile 'org.apache.felix:org.apache.felix.gogo.command:0.10.0'
  
  compile 'org.codehaus.groovy:groovy-all:2.0.6'
  compile 'commons-cli:commons-cli:1.2'
  
  runtime 'org.apache.geronimo.specs:geronimo-jta_1.1_spec:1.1.1'

  testCompile 'junit:junit:4.8.2'
  testCompile 'org.mockito:mockito-all:1.9.5'
}

compileJava.doLast {
  ant {
	path (id: 'foo') {
		pathelement(path: "build/classes/main")
		pathelement(path: configurations.compile.asPath)
		pathelement(path: configurations.runtime.asPath)
	}
	
	copy(todir: "build/classes/main") {
		fileset(dir: 'src/main/resources')
	}

	taskdef (
		resource: 'org/apache/openjpa/ant/antlib.xml',
		classpath: references.foo
	)
	
	// Can also put a fileset inside { } instead of specifying classes in
	// persistence.xml.
	//
	//	  fileset(dir: ".",
	//	     includes: "build/classes/main/**/jpa/domain/*.class"
	//	  )
	enhance(classpath: references.foo)
  }
}

jar {
  manifest {
    version = osgiVersion
    symbolicName = 'interactivespaces.master'
	
    instruction 'Export-Package',
		'!interactivespaces.controller.client.master.internal.*', 
		'!interactivespaces.resource.repository.internal.*', 
		'interactivespaces.*'
		
    instruction 'Private-Package',
		'interactivespaces.controller.client.master.internal.*', 
		'interactivespaces.resource.repository.internal.*'
		
    instruction 'Import-Package',
		'org.apache.felix.service.command;status=provisional',
		'org.eclipse.gemini.blueprint.config',
		'org.springframework.transaction.config',
		'org.springframework.aop',
		'org.springframework.aop.framework',
		'org.aopalliance.aop',
		'javax.sql',
		'org.apache.commons.dbcp',
		'org.springframework.orm.jpa.vendor',
		'org.springframework.jdbc.datasource',
		'org.springframework.transaction.interceptor',
		'org.apache.derby.jdbc',
		'javax.persistence.criteria',
		'*'
  }
}

